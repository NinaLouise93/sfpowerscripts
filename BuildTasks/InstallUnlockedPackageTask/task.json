{
  "id": "7af1df5d-8a5a-4eaa-9df1-968393c43397",
  "name": "sfpwowerscript-installunlockedpackage-task",
  "friendlyName": "Install an unlocked package to an org",
  "description": "Installs an unlocked package to an org",
  "helpMarkDown": "Installs an unlocked package by passing the build artifact or by passing the package version id",
  "category": "Deploy",
  "author": "azlam.abdulsalam",
  "version": {
    "Major": 1,
    "Minor": 0,
    "Patch": 0
  },
  "instanceNameFormat": "Installs the $(package) to $(envname) ",
  "inputs": [
    {
      "name": "envname",
      "type": "string",
      "label": "Environment name",
      "defaultValue": "",
      "required": true,
      "helpMarkDown": "Alias/Name of the environment"
    },
    {
      "name": "package",
      "type": "string",
      "label": "Name of the package to be installed",
      "required": true,
      "helpMarkDown": "Set the pipeline's build number to the the project's incremented version number"
    },
    {
      "name": "package_installedfrom",
      "type": "pickList",
      "label": "Package to be installed From",
      "defaultValue": "BuildArtifact",
      "options": {
        "BuildArtifact": "Utilize the attached build artifact",
        "Custom": "Pass the package version id as an argument "
      },
      "required": true,
      "helpMarkDown": "Select the option from where the package version is to be picked up for install"
    },
    {
      "name": "package_version_id",
      "type": "string",
      "label": "Name of the package to be installed",
      "required": false,
      "helpMarkDown": "Set the pipeline's build number to the the project's incremented version number",
      "visibleRule": "package_installedfrom = Custom"
    },
    {
      "name": "artifact",
      "type": "string",
      "label": "Name of the artifact that is attached to this release pipeline",
      "required": false,
      "helpMarkDown": "Provide the name of the artifact which is the p",
      "visibleRule": "package_installedfrom = BuildArtifact"
    },
    {
      "name": "installationkey",
      "type": "string",
      "label": "Installation Key",
      "required": false,
      "helpMarkDown": "installation key for key-protected package (default: null)"
    },
    {
      "name": "apexcompileonlypackage",
      "type": "boolean",
      "label": "Compile Apex from only the package",
      "defaultValue": false,
      "required": false,
      "helpMarkDown": "Each package installation triggers a compilation of apex,uncheck to trigger entire org compilation on every package installation"
    },
    {
      "name": "security_type",
      "type": "pickList",
      "label": "Security access type for the installed package",
      "defaultValue": "AllUsers",
      "options": {
        "AllUsers": "AllUsers",
        "AdminsOnly": "AdminsOnly"
      },
      "required": true,
      "helpMarkDown": "Select the security access for the package installation"
    },
    {
      "name": "upgrade_type",
      "type": "pickList",
      "label": "Security access type for the installed package",
      "defaultValue": "Mixed",
      "options": {
        "Mixed": "Mixed",
        "DeprecateOnly": "DeprecateOnly",
        "Delete": "Delete"
      },
      "required": true,
      "helpMarkDown": "the upgrade type for the package installation"
    },
    {
      "name": "wait_time",
      "type": "string",
      "label": "Wait Time",
      "defaultValue": "120",
      "required": true,
      "helpMarkDown": "wait time for command to finish in minutes"
    },
    {
      "name": "publish_wait_time",
      "type": "string",
      "label": "Wait Time",
      "defaultValue": "120",
      "required": true,
      "helpMarkDown": "number of minutes to wait for subscriber package version ID to become available in the target org"
    },
    {
      "name": "working_directory",
      "type": "string",
      "label": "Project Directory",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "The working directory should contain a sfdx-project.json for this command to succeed"
  }
  ],
  "execution": {
    "Node": {
      "target": "InstallUnlockedPackage.js"
    }
  }
}
