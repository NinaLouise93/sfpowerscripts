{
  "id": "c6d94132-eb00-4ff7-860b-57858a40ea33",
  "name": "sfpwowerscripts-createdeltapackage-task",
  "friendlyName": "Create a delta package",
  "description": "This task is used to create an delta package between two commits and bundle the created delta as as a deployable artifact,This task is part of SFPowerscripts, Please ensure Install SFDX Task is used before utilizing this task",
  "helpMarkDown": "Read more about the tasks here at  ",
  "category": "Build",
  "author": "azlam.abdulsalam",
  "version": {
    "Major": 4,
    "Minor": 0,
    "Patch": 0
  },
  "instanceNameFormat": "Create Delta Package based on two commits",
  "inputs": [
    {
      "name": "package",
      "type": "string",
      "label": "Name of the package",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "The name of the package"
    },
    {
      "name": "version_name",
      "type": "string",
      "label": "The name of the version that needs to be associated with the diff package",
      "defaultValue": "$(package)-$(releaseIdentifier)-$(build.buildNumber)",
      "required": false,
      "helpMarkDown": "Provide a meaningful name such as the default value, so this artifact can be identified in the release "
    },
    {
      "name": "project_directory",
      "type": "string",
      "label": "Project Directory",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "The project directory should contain a sfdx-project.json for this command to succeed"
    },
    {
      "name": "revision_from",
      "type": "string",
      "label": "Revision ID (Git Commit ID) from where the diff should baselined on",
      "defaultValue": "",
      "required": true,
      "helpMarkDown": "Provide the full SHA Commit ID, from where the diff should start generating"
    },
    {
      "name": "revision_to",
      "type": "string",
      "label": "Revision ID (Git Commit ID) from where the diff should baselined upto",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "If not set, the head commit ID of the current branch is used"
    },
    {
      "name": "generate_destructivemanifest",
      "type": "boolean",
      "label": "Generate Destructive Manifest based on the diff",
      "defaultValue": false,
      "required": false,
      "helpMarkDown": "Check this option to generate a destructive manifest to be deployed"
    },
    {
      "name": "project_directory",
      "type": "string",
      "label": "Revision To",
      "defaultValue": "",
      "required": false,
      "helpMarkDown": "The project directory should contain a sfdx-project.json for this command to succeed"
    },
    {
      "name": "set_build_number",
      "type": "boolean",
      "label": "Set the pipeline's build number to the the project's incremented version number",
      "defaultValue": true,
      "required": true,
      "helpMarkDown": "Set the pipeline's build number to the the project's incremented version number"
    },
    {
      "name": "build_artifact_enabled",
      "type": "boolean",
      "label": "Create a build artifact with the package id  if the delta package creation is successful",
      "defaultValue": true,
      "required": true,
      "helpMarkDown": "Create a build artifact, so that this pipeline can be consumed by a release pipeline"
    },
    {
      "name": "isTelemetryEnabled",
      "type": "boolean",
      "label": "Send Anonymous Usage Telemetry",
      "defaultValue": true,
      "required": true,
      "helpMarkDown": "Enabling this will help us to collect information on the tasks and improve services. All information collected is anonymised, please check code repository to understand what data is collected"
    }
  ],
  "OutputVariables": [
    {
      "name": "sfpowerscripts_delta_package_path",
      "description": "The path to the directory where the delta package is created"
    }
  ],
  "execution": {
    "Node": {
      "target": "CreateDeltaPackageTask/CreateDeltaPackage.js"
    }
  }
}
